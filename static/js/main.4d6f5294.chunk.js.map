{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","cn","disabled","href","onClick","value","map","page","active","length","items","App","useState","setCurrentPage","setPerPage","lastItem","firstItem","id","onChange","e","num","Number","target","htmlFor","useMemo","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAc9C,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBP,IADZ,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACLC,QAAS,kBAtBCC,EAsBcV,OArBV,IAAhBA,GACFC,EAAaS,EAAQ,IAFR,IAACA,GAuBV,gBACkB,IAAhBV,EANJ,oBAaDE,EAAMS,KAAI,SAAAC,GAAI,OACb,oBAAIP,UAAWC,IAAG,YAAa,CAC7BO,OAAQb,IAAgBY,IAD1B,SAIE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMR,EAAaW,IAJ9B,SAMGA,SAKP,oBAAIP,UAAWC,IAAG,YAAa,CAC7BC,SAAUP,IAAgBE,EAAMA,EAAMY,OAAS,KADjD,SAIE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACLC,QAAS,kBAjDEC,EAiDcV,OAhD3BA,IAAgBE,EAAMA,EAAMY,OAAS,IACvCb,EAAaS,EAAQ,IAFP,IAACA,GAkDX,gBACEV,IAAgBE,EAAMA,EAAMY,OAAS,GANzC,wBChEFC,EAAQxB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACIC,EAAWpB,EAAcD,EACvBsB,EAAYD,EAAWrB,EAAU,EAEnCqB,EAAW,KACbA,EAAW,IAQb,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCqB,EADjC,cACgDD,EADhD,eAC+DL,EAAMD,OADrE,OAIA,sBAAKT,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVK,MAAOX,EACPwB,SAAU,SAACC,GAAD,OApBMC,EAoBkBC,OAAOF,EAAEG,OAAOjB,OAnB1DS,EAAWM,QACXP,EAAe,GAFQ,IAACO,GAelB,UAOE,wBAAQf,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOkB,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOiB,EAAMD,OACbf,QAASA,EACTC,YAAaA,EACbC,aAAc4B,mBAAQ,kBAAMX,IAAgB,MAG9C,6BACG3B,EAAW8B,EAAWD,GAAUT,KAAI,SAAAmB,GAAI,OACvC,oBAAI,UAAQ,OAAZ,wBACWA,cC5DrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4d6f5294.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  const moveLeft = (value: number) => {\n    if (currentPage !== 1) {\n      onPageChange(value - 1);\n    }\n  };\n\n  const moveRight = (value: number) => {\n    if (currentPage !== pages[pages.length - 1]) {\n      onPageChange(value + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={() => moveLeft(currentPage)}\n          aria-disabled={\n            currentPage === 1\n          }\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li className={cn('page-item', {\n          active: currentPage === page,\n        })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: currentPage === pages[pages.length - 1],\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={() => moveRight(currentPage)}\n          aria-disabled={\n            currentPage === pages[pages.length - 1]\n          }\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  let lastItem = currentPage * perPage;\n  const firstItem = lastItem - perPage + 1;\n\n  if (lastItem > 42) {\n    lastItem = 42;\n  }\n\n  const handleChangePage = (num: number) => {\n    setPerPage(num);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => handleChangePage(Number(e.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={useMemo(() => setCurrentPage, [])}\n      />\n\n      <ul>\n        {getNumbers(firstItem, lastItem).map(item => (\n          <li data-cy=\"item\">\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}